#!/bin/bash

# Sud0Recon - Next-Level Automated Reconnaissance Tool
# Universal Launcher Script
# Usage: ./sud0recon [options]
#        ./sud0recon setup    # Run setup
#        ./sud0recon demo     # Run demo
#        ./sud0recon view     # View latest report
#        ./sud0recon list     # List all reports

SCRIPT_DIR=$(dirname "$0")
cd "$SCRIPT_DIR"

# Color codes
BLUE='\033[0;34m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
NC='\033[0m' # No Color

# Function to show usage
show_usage() {
    echo -e "${CYAN}🚀 Sud0Recon - Universal Launcher${NC}"
    echo -e "${BLUE}=================================${NC}"
    echo ""
    echo -e "${GREEN}Quick Start:${NC}"
    echo -e "  ${YELLOW}./sud0recon -t example.com${NC}                    # Scan single target"
    echo -e "  ${YELLOW}./sud0recon -t google.com,github.com${NC}          # Scan multiple targets"
    echo -e "  ${YELLOW}./sud0recon -t example.com -A${NC}                 # Aggressive scan"
    echo ""
    echo -e "${GREEN}Utility Commands:${NC}"
    echo -e "  ${YELLOW}./sud0recon setup${NC}                             # Install/setup tool"
    echo -e "  ${YELLOW}./sud0recon demo${NC}                              # Run demo"
    echo -e "  ${YELLOW}./sud0recon view${NC}                              # View latest report"
    echo -e "  ${YELLOW}./sud0recon list${NC}                              # List all reports"
    echo -e "  ${YELLOW}./sud0recon help${NC}                              # Show detailed help"
    echo ""
    echo -e "${GREEN}For detailed options:${NC}"
    echo -e "  ${YELLOW}./sud0recon --help${NC}                            # Full help menu"
    echo ""
    echo -e "${MAGENTA}💬 Contact: sud0x.dev@proton.me${NC}"
    echo -e "${MAGENTA}🌐 GitHub: github.com/Sud0-x/Sud0Recon${NC}"
}


# Function to run setup
setup_tool() {
    echo -e "${BLUE}╔══════════════════════════════════════════╗${NC}"
    echo -e "${BLUE}║           Sud0Recon Setup                ║${NC}"
    echo -e "${BLUE}║        Next-Level Recon Tool             ║${NC}"
    echo -e "${BLUE}║         by Sud0-x                        ║${NC}"
    echo -e "${BLUE}╚══════════════════════════════════════════╝${NC}\n"
    
    # Check if Python 3 is installed
    if ! command -v python3 &> /dev/null; then
        echo -e "${RED}❌ Python 3 is not installed. Please install Python 3 first.${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}✓ Python 3 found${NC}"
    
    # Create virtual environment if it doesn't exist
    if [ ! -d "venv" ]; then
        echo -e "${YELLOW}🔧 Creating virtual environment...${NC}"
        python3 -m venv venv
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}✓ Virtual environment created${NC}"
        else
            echo -e "${RED}❌ Failed to create virtual environment${NC}"
            exit 1
        fi
    else
        echo -e "${GREEN}✓ Virtual environment already exists${NC}"
    fi
    
    # Activate virtual environment and install dependencies
    echo -e "${YELLOW}📦 Installing dependencies...${NC}"
    source venv/bin/activate
    pip install -r requirements.txt > /dev/null 2>&1
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}✓ Dependencies installed successfully${NC}"
    else
        echo -e "${RED}❌ Failed to install dependencies${NC}"
        exit 1
    fi
    
    # Create reports directory
    mkdir -p reports
    echo -e "${GREEN}✓ Reports directory created${NC}"
    
    echo -e "\n${BLUE}╔══════════════════════════════════════════╗${NC}"
    echo -e "${BLUE}║           Setup Complete! 🎉             ║${NC}"
    echo -e "${BLUE}╚══════════════════════════════════════════╝${NC}"
    
    echo -e "\n${GREEN}Now you can run Sud0Recon:${NC}"
    echo -e "${YELLOW}./sud0recon -t example.com${NC}"
    echo -e "${YELLOW}./sud0recon -t example.com --threads 20${NC}"
    echo -e "${YELLOW}./sud0recon --help${NC}"
}

# Function to run demo
run_demo() {
    echo -e "${CYAN}🔥 Sud0Recon Demo 🔥${NC}"
    echo -e "${BLUE}====================${NC}"
    echo ""
    
    echo -e "${GREEN}1. Super Simple Usage:${NC}"
    echo -e "   ${YELLOW}./sud0recon -t example.com${NC}"
    echo ""
    
    echo -e "${GREEN}2. Multiple Targets:${NC}"
    echo -e "   ${YELLOW}./sud0recon -t google.com,github.com${NC}"
    echo ""
    
    echo -e "${GREEN}3. Advanced Scanning:${NC}"
    echo -e "   ${YELLOW}./sud0recon -t example.com --subdomain-enum --port-scan -v${NC}"
    echo ""
    
    echo -e "${GREEN}4. Aggressive Mode:${NC}"
    echo -e "   ${YELLOW}./sud0recon -t example.com -A${NC}"
    echo ""
    
    echo -e "${GREEN}5. Custom Settings:${NC}"
    echo -e "   ${YELLOW}./sud0recon -t example.com --threads 20 --timeout 15${NC}"
    echo ""
    
    echo -e "${CYAN}📁 Your reports will be saved in the 'reports/' directory${NC}"
    echo ""
    
    read -p "Want to run a quick test on httpbin.org? (y/n): " answer
    if [ "$answer" = "y" ] || [ "$answer" = "Y" ]; then
        echo ""
        echo -e "${YELLOW}🚀 Running demo scan...${NC}"
        
        # Check if setup has been run
        if [ ! -d "venv" ]; then
            echo -e "${BLUE}🔧 First time setup required...${NC}"
            setup_tool
        fi
        
        source "venv/bin/activate"
        python -m src.sud0recon.cli -t httpbin.org --threads 5
    else
        echo ""
        echo -e "${GREEN}👍 You can run it anytime with: ${YELLOW}./sud0recon -t httpbin.org${NC}"
    fi
}

# Function to view latest report
view_latest_report() {
    echo -e "${CYAN}🔍 Sud0Recon Report Viewer${NC}"
    echo -e "${BLUE}===========================${NC}"
    
    # Check if reports directory exists
    if [ ! -d "reports" ]; then
        echo -e "${RED}❌ No reports directory found.${NC}"
        echo -e "${YELLOW}💡 Run a scan first: ./sud0recon -t example.com${NC}"
        exit 1
    fi
    
    # Find the latest JSON report
    LATEST_REPORT=$(ls -t reports/sud0recon_scan_*.json 2>/dev/null | head -n1)
    
    if [ -z "$LATEST_REPORT" ]; then
        echo -e "${RED}❌ No reports found in reports/ directory.${NC}"
        echo -e "${YELLOW}💡 Run a scan first: ./sud0recon -t example.com${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}📁 Latest report: $LATEST_REPORT${NC}"
    echo -e "${GREEN}📅 Modified: $(stat -c %y "$LATEST_REPORT" 2>/dev/null || stat -f %Sm "$LATEST_REPORT" 2>/dev/null)${NC}"
    echo ""
    
    # Ask user what they want to do
    echo -e "${YELLOW}What would you like to do?${NC}"
    echo "1) View report content"
    echo "2) Show file path only"
    echo "3) Open in nano editor"
    echo "4) List all reports"
    echo "5) Exit"
    echo ""
    
    read -p "Choose option (1-5): " choice
    
    case $choice in
        1)
            echo ""
            echo -e "${CYAN}📄 Report Content:${NC}"
            echo -e "${BLUE}==================${NC}"
            cat "$LATEST_REPORT"
            ;;
        2)
            echo ""
            echo -e "${GREEN}📁 Full path: $(realpath "$LATEST_REPORT")${NC}"
            ;;
        3)
            echo ""
            echo -e "${YELLOW}🖊️ Opening in nano editor...${NC}"
            nano "$LATEST_REPORT"
            ;;
        4)
            list_all_reports
            ;;
        5)
            echo -e "${GREEN}👋 Goodbye!${NC}"
            exit 0
            ;;
        *)
            echo -e "${RED}❌ Invalid option. Use 1-5.${NC}"
            exit 1
            ;;
    esac
}

# Function to list all reports
list_all_reports() {
    echo -e "${CYAN}📊 Sud0Recon Report List${NC}"
    echo -e "${BLUE}=========================${NC}"
    
    # Check if reports directory exists
    if [ ! -d "reports" ]; then
        echo -e "${RED}❌ No reports directory found.${NC}"
        echo -e "${YELLOW}💡 Run a scan first: ./sud0recon -t example.com${NC}"
        exit 1
    fi
    
    # Count reports
    REPORT_COUNT=$(ls reports/sud0recon_scan_*.json 2>/dev/null | wc -l)
    
    if [ "$REPORT_COUNT" -eq 0 ]; then
        echo -e "${RED}❌ No reports found in reports/ directory.${NC}"
        echo -e "${YELLOW}💡 Run a scan first: ./sud0recon -t example.com${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}Found $REPORT_COUNT report(s):${NC}"
    echo ""
    
    # List all reports with full paths and timestamps
    counter=1
    for report in $(ls -t reports/sud0recon_scan_*.json 2>/dev/null); do
        echo -e "${YELLOW}[$counter] $(basename "$report")${NC}"
        echo -e "    ${CYAN}📁 Path: $(realpath "$report")${NC}"
        echo -e "    ${GREEN}📅 Date: $(stat -c %y "$report" 2>/dev/null | cut -d'.' -f1 || stat -f %Sm "$report" 2>/dev/null)${NC}"
        echo ""
        ((counter++))
    done
    
    echo -e "${BLUE}🔧 Quick Actions:${NC}"
    echo -e "${BLUE}==================${NC}"
    echo -e "${YELLOW}• View latest: ./sud0recon view${NC}"
    echo -e "${YELLOW}• View specific: cat reports/sud0recon_scan_YYYYMMDD_HHMMSS.json${NC}"
    echo -e "${YELLOW}• Open in editor: nano reports/sud0recon_scan_YYYYMMDD_HHMMSS.json${NC}"
}

# Handle special commands
case "$1" in
    "setup" | "--setup")
        setup_tool
        exit 0
        ;;
    "demo" | "--demo")
        run_demo
        exit 0
        ;;
    "view" | "view-report" | "--view-report")
        view_latest_report
        exit 0
        ;;
    "list" | "list-reports" | "--list-reports")
        list_all_reports
        exit 0
        ;;
    "help" | "usage")
        show_usage
        exit 0
        ;;
    "")
        show_usage
        exit 0
        ;;
esac

# Main execution - check if setup has been run
if [ ! -d "venv" ]; then
    echo -e "${BLUE}🔧 First time setup required...${NC}"
    echo -e "${YELLOW}Running setup automatically...${NC}"
    setup_tool
    echo ""
fi

# Check for virtual environment
if [ ! -d "venv" ]; then
    echo -e "${RED}❌ Virtual environment not found. Setup failed.${NC}"
    exit 1
fi

# Activate virtual environment
source "venv/bin/activate"

# Run the Python scanner with all provided arguments
python -m src.sud0recon.cli "$@"
